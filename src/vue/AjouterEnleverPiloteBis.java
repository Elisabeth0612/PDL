/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vue;

import vue_defaut.AjouterEnleverPilote;
import controleur.Controleur;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import modele.Pilote;
import modele.Voiture;

/**
 *
 * @author Co
 */
public class AjouterEnleverPiloteBis extends javax.swing.JFrame implements MaFenetre {

    private Controleur controleur;
    private DefaultListModel<String> model1;
    private DefaultListModel<String> model2;
    private Voiture voitureCourante;
    private List<Pilote> lesPVoitureTemp = new ArrayList<Pilote>();
    /**
     * Creates new form AjouterEnleverPilote
     */
    public AjouterEnleverPiloteBis(Controleur c) {
        controleur = c;
        initComponents();
    }
    
    public void lancer(){
        setVisible(true);
    }
    
    @Override
    public void afficher() {
        raffraichir();
        charger();
        //on affiche la fenetre
        setVisible(true);
        
    }

    @Override
    public void masquer() {
        setVisible(false);
    }

    @Override
    public void fermer() {
        dispose();
    }
    
    @Override
    public void raffraichir() {
        //jPanel2.repaint();
    }

    @Override
    public MaFenetre getPrecedent() {
       return null; 
    }
    
    @Override
    public void vider() {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
    
    public void charger(){
        List<Pilote> lesPE = controleur.getListPilotesExistants();
        if(lesPE.size()!=0){
            model1 = new DefaultListModel<String>();
            for(Pilote p : lesPE){
                model1.addElement(p.getNom()+" "+p.getPrenom());
            }
            jList1.setModel(model1);
            jList1.setSelectedIndex(0);
            jList1.repaint();
       }
        
        List<Pilote> lesP = controleur.getPilotesVoiture(voitureCourante.getNumVoiture());
        lesPVoitureTemp = lesP;
        if(lesP.size()!=0){
            model2 = new DefaultListModel<String>();
            for(Pilote p : lesP){
                model2.addElement(p.getNom()+" "+p.getPrenom());
            }
            jList2.setModel(model2);
            jList2.setSelectedIndex(0);
            jList2.repaint();
       }
    }
    
    public void miseAJour(Voiture v){
        voitureCourante=v;
    }
    
    public int parcoursList(String nom, String prenom){
        //System.out.println("nom ="+nom+" prenom="+prenom);
        for(int i=0; i<lesPVoitureTemp.size();i++){
            if(lesPVoitureTemp.get(i).getNom().equals(nom) && lesPVoitureTemp.get(i).getPrenom().equals(prenom)){
                return i;
            }
        }
        return -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel() {
            List<Pilote> lesPE = new ArrayList<Pilote>();
            public int getSize() { return lesPE.size();
            }
            public Object getElementAt(int i) { return lesPE.get(i); }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel1.setText("Pilotes existants :");

        jList2.setModel(new javax.swing.AbstractListModel() {
            List<Pilote> lesP = new ArrayList<Pilote>();
            public int getSize() { return lesP.size();
            }
            public Object getElementAt(int i) { return lesP.get(i); }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel2.setText("Pilotes de la voiture :");

        jButton1.setText("Cr√©er un nouveau pilote");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(">>");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton4.setText("Enregistrer");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Annuler");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(70, 70, 70))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // Bouton ">>" jList1 PilotesExistants - jList2 PilotesVoiture
        int i = jList1.getSelectedIndex();
        String nomPrenomPilote = (String)jList1.getSelectedValue();
        String nomPilote = nomPrenomPilote.substring(0,nomPrenomPilote.lastIndexOf(" "));
        String prenomPilote = nomPrenomPilote.substring(nomPrenomPilote.lastIndexOf(" ")+1,nomPrenomPilote.length());
        
        if(jList1.isSelectionEmpty()){
            JOptionPane.showMessageDialog(this,"Veuillez s√©lectionner une voiture.","Erreur",JOptionPane.ERROR_MESSAGE);
        }else{
            Pilote p = controleur.getPiloteVoiture(voitureCourante, nomPilote, prenomPilote);
            if(p != null){
                JOptionPane.showMessageDialog(this,"Le pilote appartient d√©j√† √† la voiture.","Erreur",JOptionPane.ERROR_MESSAGE);
            }else{
                Pilote pE = controleur.getPiloteExistant(nomPilote, prenomPilote);

                lesPVoitureTemp.add(pE);
                model2.addElement(pE.getNom()+" "+pE.getPrenom());
                jList2.repaint();
            }
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // Bouton "<<" jList1 PilotesExistants - jList2 PilotesVoiture
        int i = jList2.getSelectedIndex();
        
        if(jList2.isSelectionEmpty()){
            JOptionPane.showMessageDialog(this,"Veuillez s√©lectionner une voiture.","Erreur",JOptionPane.ERROR_MESSAGE);
        }else{
            String nomPrenomPilote = (String)jList2.getSelectedValue();
            String nomPilote = nomPrenomPilote.substring(0,nomPrenomPilote.lastIndexOf(" "));
            String prenomPilote = nomPrenomPilote.substring(nomPrenomPilote.lastIndexOf(" ")+1,nomPrenomPilote.length());
            
            int indice = parcoursList(nomPilote, prenomPilote);
            if(indice!=-1){
                lesPVoitureTemp.remove(indice);
                model2.remove(i);
                jList2.repaint();
            }
            
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // Bouton "Creer nouveau pilote"
        controleur.ouvrirCreerModifierPilote();
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        // Bouton "Enregistrer"
        controleur.setListVoiture(voitureCourante, lesPVoitureTemp);
        controleur.retour();
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
        // Bouton "Annuler"
        controleur.retour();
    }

   
    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration
}
